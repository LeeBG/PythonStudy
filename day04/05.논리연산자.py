"""
    논리연산자
"""
coin1 = "앞면"
coin2 = "뒷면"
# 결과가 2개 이상 나오면 이용하기가 어렵다.
# 논리값을 정수로 형변환하면 True(1), False(0)이다.

print("둘 다 앞면인가?",coin1 == "앞면", coin2 == "앞면")
# 산술연산으로 합칠 수 있음
print("둘 다 앞면인 경우는?",int(coin1 == "앞면")+ int(coin2=="앞면") == 2)
print("둘 중 하나가 앞면인가?",int(coin1 == "앞면")+ int(coin2=="앞면") == 1)
print("둘 다 뒷면인가?",int(coin1 == "앞면")+ int(coin2=="앞면") == 0)
# 문제점 : 별로 직관적이지 않고 알아보기 어렵다.

# 용도1. 관계연산자 연속으로 사용해서 만들수 없는 조건식이 필요할 때
# 용도2. 그 결과를 하나로 합쳐야 할 때

# 이 문제를 해결하기 위해 나타난 것이 논리연산자

# 논리곱 and : 서로 다른 범위의 조건식을 모두 만족해야 할 때
print("둘 다 앞면인 경우는?",coin1 == "앞면" and coin2 == "앞면")

# 논리곱 or : 같은 범위 내에서 조건식들 중 하나 이상만 맞아 떨어지면 될 때
print("둘 중 하나가 앞면인 경우는?",coin1 == "앞면" or coin2 == "앞면")

# 부정 not : 결과를 반전시키는 연산자
print("둘 중 하나가 앞면이 아닌가?", not (coin1 == "앞면" or coin2 == "앞면"))

# - 조건식을 덜 쓰기 위한 것(not을 풀어씀)
print("둘 중 하나가 앞면이 아닌가?", coin1 != "앞면" and coin2 != "앞면")

